package com.airplayer;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

public class DetailActivity extends Activity{

	private TextView Name;
	private TextView Resolution;
	private TextView Duration;
	private TextView Size;
	private Button directPlayBtn;
	private Button playBtn;
	
	private int pid;
	private String fileName;
	private String fileLoad;
	private String command;
	private String returnData;
	private String setQuality;
	private String rtspServer;
	private static final int SERVERPROT = 8188;
	private Socket mSocket = null;
	private String[] quality = new String[]{"高清", "普通", "压缩"};
	
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.detail);
		
		Name = (TextView) this.findViewById(R.id.fname);
		Resolution = (TextView) this.findViewById(R.id.resolution);
		Duration = (TextView) this.findViewById(R.id.duration);
		Size = (TextView) this.findViewById(R.id.size);
		directPlayBtn = (Button) this.findViewById(R.id.direct);
		playBtn = (Button) this.findViewById(R.id.play);
		
		fileLoad = this.getIntent().getStringExtra("load");
		fileName = this.getIntent().getStringExtra("file");
		Name.setText("file name:"+fileName);
		rtspServer = this.getIntent().getStringExtra("server");
		getDetail("describe ."+fileLoad+fileName);
		
		directPlayBtn.setOnClickListener(new OnClickListener(){

			public void onClick(View arg0) {
				playMedia("play ."+fileLoad+fileName+",quality:0");
			}
        	
        });
		playBtn.setOnClickListener(new OnClickListener(){

			public void onClick(View arg0) {
				setQuality = "high";
			    AlertDialog.Builder builder = 
					new AlertDialog.Builder(DetailActivity.this);
			    builder.setTitle("设置播放参数");
			    //builder.setMessage("设置视频质量");
			    builder.setSingleChoiceItems(quality, 0,  
					new DialogInterface.OnClickListener(){

						@Override
						public void onClick(DialogInterface dialog, int which) {
							// TODO Auto-generated method stub
							switch(which){
							case 0:
								setQuality = "high";
								break;
							case 1:
								setQuality = "medium";
								break;
							case 2:
								setQuality = "low";
								break;
							}
						}
				
			    });
			    builder.setPositiveButton("确定", new DialogInterface.OnClickListener(){

				    @Override
				    public void onClick(DialogInterface dialog, int which) {
					    // TODO Auto-generated method stub
				    	playMedia("play ."+fileLoad+fileName+",quality:"+setQuality);
				    }
				
			    });
			    builder.setNegativeButton("取消", null);
			    builder.show();
			}
        	
        });
	}

	private void getDetail(String c) {
		command = c;
		try {
    		mSocket = new Socket(rtspServer, SERVERPROT);
    		BufferedReader in = new BufferedReader(new InputStreamReader(mSocket.getInputStream()));
    		PrintWriter out = new PrintWriter(mSocket.getOutputStream());
    		out.print(command);
    		out.flush();
    		int count = 0;
    		String[] temp;
			while((returnData = in.readLine()) != null){
				if(count == 1){
					temp = returnData.split(", ");
				    Resolution.setText(temp[0]);
				    Duration.setText(temp[1]);
				    Size.setText(temp[2]);
				}
				count++;
			}
			mSocket.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	private void playMedia(String c) {
		// TODO Auto-generated method stub
    	command = c;
    	try {
    		mSocket = new Socket(rtspServer, SERVERPROT);
    		BufferedReader in = new BufferedReader(new InputStreamReader(mSocket.getInputStream()));
    		PrintWriter out = new PrintWriter(mSocket.getOutputStream());
    		out.print(command);
    		out.flush();
    		int count = 0;
    		while((returnData = in.readLine()) != null){
				if(count == 0)
				{
					;
				}
				//if(count == 1)
					//pid = Integer.parseInt(returnData);
				if(count == 1) {
					System.out.println(returnData);
					Uri uri = Uri.parse(returnData);
	                Intent intent = new Intent();
	                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
	                intent.setAction(Intent.ACTION_VIEW);
	                intent.setDataAndType(uri, "video/*");
	                startActivity(intent);
	                command = "close "+pid;
	                out = new PrintWriter(mSocket.getOutputStream());
	        		out.print(command);
	        		out.flush();
				}
				count++;
			}
			mSocket.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
